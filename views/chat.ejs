<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mini Whatsapp</title>
    <link href="https://cdn.jsdelivr.net/npm/remixicon@4.1.0/fonts/remixicon.css" rel="stylesheet" />
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f9fafb;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        #main {
            display: flex;
            width: 90%;
            height: 90%;
            background-color: #fff;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
            overflow: hidden;
        }

        .left {
            width: 300px;
            height: 100%;
            background-color: #f0f2f5;
            border-right: 1px solid #ccc;
            padding: 20px;
            overflow-y: auto;
        }

        .left h2 {
            margin-bottom: 20px;
            color: #333;
        }

        .profile {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
        }

        .profile img {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            margin-right: 15px;
        }

        .profile span {
            font-weight: bold;
            color: #333;
        }

        .user-list {
            list-style-type: none;
            padding: 0;
            margin: 0;
        }

        .user-list-item {
            display: flex;
            align-items: center;
            padding: 10px;
            border-bottom: 1px solid #eee;
            cursor: pointer;
        }

        .user-list-item img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-right: 15px;
        }

        .user-list-item span {
            font-weight: bold;
            color: #333;
        }

        .right {
            flex: 1;
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            align-items: center;
        }

        .chat-container::-webkit-scrollbar {
            display: none;
        }

        .chat-container {
            width: 100%;
            height: 80%;
            margin: 20px;
            padding: 20px;
            background-color: #f9fafb;
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
            overflow-y: auto;
            display: flex;
            flex-direction: column;

        }

        .message {
            margin-bottom: 20px;
            max-width: 550px;
            width: fit-content;
        }

        .incoming {
            background-color: #e1ffc7;
            padding: 15px;
            border-radius: 20px 20px 20px 0;
            margin-right: 40%;
        }

        .outgoing {
            background-color: #f2f2f2;
            padding: 15px;
            border-radius: 20px 20px 0 20px;
            margin-left: 40%;
            align-self: flex-end;
        }

        .message-content {
            word-wrap: break-word;
            color: #333333;

        }


        .input-container {
            width: 100%;
            position: relative;
            bottom: 0;
            padding: 20px;
            background-color: #fff;
            box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);
            border-bottom-left-radius: 10px;
            border-bottom-right-radius: 10px;
        }

        .message-input {
            width: calc(100% - 110px);
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 25px;
            outline: none;
        }

        .send-button {
            width: 80px;
            padding: 10px 20px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 25px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .send-button:hover {
            background-color: #45a049;
        }

        .groupName::-webkit-scrollbar {
            display: none;
        }
    </style>
</head>

<body>

    <div id="main" class="relative">
        <div class="left">
            <div class="profile relative">
                <img src="<%=loggedInUser.profileImage%>" alt="Profile Image">
                <span>
                    <%=loggedInUser.username%>
                </span>
                <i onclick="document.querySelector('#overlay').style.display='block'"
                    class="ri-user-add-line absolute right-0"></i>
                <i onclick="document.querySelector('#overlay2').style.display='flex'"
                    class="ri-group-line absolute right-[11%]"></i>
            </div>
            <h2 class="text-xl font-[500]">Users</h2>
            <ul id="userList" class="user-list">
                <% loggedInUser.friends.reverse().forEach(friend=>{ %>
                    <li onclick="openChat('user','<%=friend.username%>','<%=friend.profileImage%>')"
                        class="user-list-item">
                        <img src="<%=friend.profileImage%>" alt="User 1 Image">
                        <span>
                            <%=friend.username%>
                        </span>
                    </li>
                    <% }) %>

            </ul>
            <h2 class="text-xl font-[500]">Groups</h2>
            <ul id="GroupList" class="user-list">
                <% loggedInUser.groups.forEach(group=>{ %>
                    <li onclick="openChat('group','<%=group.name%>','<%=group.profileImage%>'); joinGroup('<%=group.name%>');"
                        class="user-list-item">
                        <img src="<%=group.profileImage%>" alt="User 1 Image">
                        <span>
                            <%=group.name%>
                        </span>
                    </li>
                    <% }) %>

            </ul>
        </div>

        <div class="right">

        </div>

        <div id="overlay" style="display: none;"
            class="h-full w-full absolute bg-zinc-800 bg-opacity-90 pt-10 px-[30%]">

            <i onclick="document.querySelector('#overlay').style.display='none'"
                class="ri-close-line absolute top-[2%] right-[2%] text-white text-2xl"></i>

            <input oninput="searchUser()" id="searchInp" type="text" class="w-[100%] p-2 px-4 rounded-md"
                placeholder="search">
            <div id="searchedUsers" class="py-3 rounded-md overflow-hidden">

            </div>

        </div>

        <div id="overlay2" style="display: none;"
            class="h-full w-full flex gap-5 absolute bg-zinc-800 bg-opacity-90 pt-10 px-[20%] ">

            <i onclick="document.querySelector('#overlay2').style.display='none'"
                class="ri-close-line absolute top-[2%] right-[2%] text-white text-2xl"></i>

            <div id="overlay2Left" class="w-[65%]">
                <input oninput="groupName(this)" type="text" placeholder="Enter the group name" name="name"
                    id="groupNameInp" class="w-full p-2 mt-10 mb-3 rounded-md">

                <% if(loggedInUser.friends.length===0 ){ %>
                    <h1 class="text-xl text-white">No friends</h1>
                    <%}else{ %>
                        <h1 class="text-xl text-white">Friends</h1>
                        <% loggedInUser.friends.reverse().forEach(friend=>{ %>
                            <div class="bg-white rounded-md px-3 py-2 mb-1 flex gap-3 items-center relative">
                                <img src="<%=friend.profileImage%>" class="h-10 w-10 rounded-full" alt="">
                                <span>
                                    <%=friend.username%>
                                </span>
                                <i id="Whatsapp<%=friend._id%>" data-add="false"
                                    onclick="appendGroupMember('<%=friend.profileImage%>','<%=friend.username%>',this)"
                                    class="ri-add-line absolute right-5 text-black"></i>
                            </div>
                            <% }) %>
                                <%} %>
            </div>


            <div id="overlay2Right" class="w-[35%] bg-white bg-opacity-50 h-fit mt-10 rounded-md px-1">

                <h1 class="groupName text-xl my-2 w-full overflow-x-auto">Group Name</h1>
                <div class="groupMembers">

                </div>

                <button onclick="createGroup(this)"
                    class="bg-green-600 text-white py-1 px-3 rounded-md w-full mb-1">Create group</button>
            </div>

        </div>



    </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.6.7/axios.min.js"
        integrity="sha512-NQfB/bDaB8kaSXF8E77JjhHG5PM6XVRxvHzkZiwl3ddWCEPBa23T76MuWSwAJdMGJnmQqM0VeY9kFszsrBEFrQ=="
        crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.5/gsap.min.js"
        integrity="sha512-7eHRwcbYkK4d9g/6tD/mhkf++eoTHwpNM9woBxtPUBWm67zeAfFC+HrdoE2GanKeocly/VxeLvIqwvCdk7qScg=="
        crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        var socket = io();

        const loggedInUser = '<%=loggedInUser.username%>'
        socket.emit('join-user', loggedInUser)

        var oppositeUser = "";

        function appendOutgoingMessage(message) {
            var template = `<div class="message outgoing">
    <div class="message-content">${message}</div>
    </div>`;
            document.querySelector('.chat-container').innerHTML += template;
        }

        function appendIncomingMessage(message, sender) {
            if (oppositeUser === sender) {
                var template = `<div class="message incoming">
      <div class="message-content">${message}</div>
    </div>`;
            } else {
                var template = `<div class="message incoming">
      <div class="message-content"><span class="text-sm font-bold">${sender}: </span> ${message}</div>
    </div>`;
            }
            document.querySelector('.chat-container').innerHTML += template;
        }

        function sendMessage(oppositeUser) {
            var message = document.querySelector('.message-input').value;
            if (!(message === '')) {
                var messageObject = {
                    sender: loggedInUser,
                    reciever: oppositeUser,
                    message
                }
                socket.emit('sendByuser', messageObject);
                document.querySelector('.message-input').value = "";
                appendOutgoingMessage(message);
            }
        }

        socket.on('sendByServer', messageObject => {
            if (messageObject.sender === oppositeUser) {
                appendIncomingMessage(messageObject.message, oppositeUser)
            }
        })

        function searchUser() {
            var username = document.querySelector('#searchInp').value
            if (username !== "") {
                fetch(`/search/${username}`).then((raw) => raw.json())
                    .then(data => {
                        const filteredData = data.filter(user => "<%=loggedInUser._id%>" !== user._id.toString())
                        var template = "";
                        filteredData.forEach(elem => {
                            template += `<div onclick="appendUser('${elem.username}','${elem.profileImage}')" class="searchedUser bg-white rounded-md px-3 py-2 mb-1 flex gap-3 items-center">
                    <img src="${elem.profileImage}" class="h-10 w-10 rounded-full" alt="">
                    <span>${elem.username}</span>
                </div>`
                        })
                        document.querySelector('#searchedUsers').innerHTML = template
                    })
            }
        }

        function appendUser(username, profileImage) {
            fetch(`/addFriend/${username}`).then(raw => raw.json())
                .then(data => {

                    if (data === 'Friend added') {
                        var template = `<li class="user-list-item">
                    <img src="${profileImage}" alt="User 1 Image">
                    <span>${username}</span>
                </li>`
                        document.querySelector('#userList').innerHTML += template;

                    }

                })
        }


        function appendGroup(username, profileImage) {
            var temp = `<li onclick="openChat('group','${username}','${profileImage}'); joinGroup('${username}');"
                        class="user-list-item">
                        <img src="${profileImage}" alt="User 1 Image">
                        <span>
                            ${username}
                        </span>
                    </li>`
            document.querySelector('#GroupList').innerHTML += temp
        }

        function getMessage(oppositeUser) {
            fetch(`/getMessage/${oppositeUser}`).then(raw => raw.json())
                .then(messageArray => {
                    messageArray.forEach(messageObject => {
                        if (messageObject.sender === oppositeUser) {
                            appendIncomingMessage(messageObject.message, oppositeUser)
                        }
                        else {
                            appendOutgoingMessage(messageObject.message)
                        }
                    })
                    const container = document.querySelector('.chat-container');
                    container.scrollTop = container.scrollHeight;
                })
        }

        function getMessageGroup(oppositeUser) {
            fetch(`/getMessageGroup/${oppositeUser}`).then(raw => raw.json())
                .then(messageArray => {
                    messageArray.forEach(messageObject => {
                        if (messageObject.sender !== loggedInUser) {
                            appendIncomingMessage(messageObject.message, messageObject.sender)
                        }
                        else {
                            appendOutgoingMessage(messageObject.message)
                        }
                    })
                    const container = document.querySelector('.chat-container');
                    container.scrollTop = container.scrollHeight;
                })
        }

        function openChat(type, username, profileImage) {
            if (type === 'user') {
                oppositeUser = username
                var temp = `
        <div class="userDetail bg-zinc-300 w-full p-2 flex gap-3 items-center">
            <img class="h-10 rounded-full" src="${profileImage}" alt="">
            <h2 class="text-xl">${username}</h2>
        </div>
        <div class="chat-container"></div>
        <div class="input-container">
            <input type="text" class="message-input" placeholder="Type your message...">
            <button onclick = "sendMessage(oppositeUser)" class="send-button">Send</button>
            </div>`
                document.querySelector('.right').innerHTML = temp
                getMessage(oppositeUser);
            } else {
                oppositeUser = username
                var temp = `
        <div class="userDetail bg-zinc-300 w-full p-2 flex gap-3 items-center">
            <img class="h-10 rounded-full" src="${profileImage}" alt="">
            <h2 class="text-xl">${username}</h2>
        </div>
        <div class="chat-container"></div>
        <div class="input-container">
            <input type="text" class="message-input" placeholder="Type your message...">
            <button onclick = "sendMessageInGroup(oppositeUser)" class="send-button">Send</button>
            </div>`
                document.querySelector('.right').innerHTML = temp
                getMessageGroup(oppositeUser);
            }

        }

        function sendMessageInGroup(groupName) {
            var message = document.querySelector('.message-input').value
            document.querySelector('.message-input').value = ""
            messageObject = {
                message,
                sender: loggedInUser,
                groupName
            }
            socket.emit('sendMessageInGroup', messageObject)
            appendOutgoingMessage(message);
        }


        socket.on('receiveMessageInGroup', messageObject => {
            appendIncomingMessage(messageObject.message, messageObject.sender)
        })



        function groupName(elem) {
            if (elem.value !== "") {
                document.querySelector('.groupName').textContent = elem.value
            } else {
                document.querySelector('.groupName').textContent = "Group Name"
            }
        }

        function appendGroupMember(profileImage, username, elem) {
            if (elem.dataset.add === "false") {

                var temp = `<div id="${elem.id}" class="groupMember bg-white rounded-md px-3 py-2 mb-1 flex gap-3 items-center relative">
                    <img src="${profileImage}" class="h-10 w-10 rounded-full" alt="">
                    <span>${username}</span>
                    <i onclick="removeGroupMember(this,'${elem.id}')" class="ri-close-line absolute right-3"></i>
                    </div>`

                document.querySelector('.groupMembers').innerHTML += temp
                elem.dataset.add = "true"
            }
        }

        function removeGroupMember(elem, id) {
            elem.parentNode.remove()
            document.querySelector(`#overlay2Left #${id}`).dataset.add = 'false'
        }

        function createGroup(elem) {

            var ids = Array.from(document.querySelectorAll('.groupMember')).map(user => {
                return user.id.toString().substring(8,)
            })

            var groupObject = {
                name: elem.parentNode.querySelector('.groupName').textContent,
                ids: ids
            }

            if (ids.length !== 0) {
                axios.get('/createGroup', {
                    params: groupObject
                })
                    .then(message => {
                        var temp = `<h1 id="notify" class="absolute top-[90%] left-[50%] translate-x-[-50%] translate-y-[-50%] text-xl text-green-400">${message.data.status}!</h1>`
                        document.querySelector('#overlay2').innerHTML += temp
                        if(message.data.status === 'Group created'){
                            appendGroup(message.data.newGroup.name,message.data.newGroup.profileImage)
                        }
                        gsap.to('#notify', {
                            top: "75%",
                            scale: 1.5,
                            duration: 1,
                            onComplete: function () {
                                document.querySelector('#overlay2').style.display = 'none'
                                document.querySelector('#overlay2 #notify').remove()
                            }
                        })
                    })
            }



        }

        function joinGroup(groupName) {
            socket.emit('joinGroup', groupName)
        }



    </script>
</body>

</html>